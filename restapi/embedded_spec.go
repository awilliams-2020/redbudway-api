// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Redbud Way API",
    "version": "1.0.0"
  },
  "host": "redbudway.com",
  "basePath": "/v1",
  "paths": {
    "/tradesperson/account": {
      "post": {
        "parameters": [
          {
            "description": "The tradesperson to create.",
            "name": "tradesperson",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password",
                "number",
                "address"
              ],
              "properties": {
                "address": {
                  "type": "object",
                  "required": [
                    "addressLineOne",
                    "zipCode",
                    "city",
                    "state"
                  ],
                  "properties": {
                    "addressLine": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    }
                  }
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "True or false",
            "schema": {
              "type": "object",
              "properties": {
                "created": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/tradesperson/account/{tradespersonId}": {
      "get": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Tradesperson ID",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A User object",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "jobs": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "rating": {
                  "type": "integer"
                },
                "reviews": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "image",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "profileName",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Updates tradesperson profile",
            "schema": {
              "type": "object",
              "properties": {
                "updated": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Tradesperson ID",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes tradesperson account",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Redbud Way API",
    "version": "1.0.0"
  },
  "host": "redbudway.com",
  "basePath": "/v1",
  "paths": {
    "/tradesperson/account": {
      "post": {
        "parameters": [
          {
            "description": "The tradesperson to create.",
            "name": "tradesperson",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password",
                "number",
                "address"
              ],
              "properties": {
                "address": {
                  "type": "object",
                  "required": [
                    "addressLineOne",
                    "zipCode",
                    "city",
                    "state"
                  ],
                  "properties": {
                    "addressLine": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    }
                  }
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "True or false",
            "schema": {
              "type": "object",
              "properties": {
                "created": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/tradesperson/account/{tradespersonId}": {
      "get": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Tradesperson ID",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A User object",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "jobs": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "rating": {
                  "type": "integer"
                },
                "reviews": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "image",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "profileName",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Updates tradesperson profile",
            "schema": {
              "type": "object",
              "properties": {
                "updated": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Tradesperson ID",
            "name": "tradespersonId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes tradesperson account",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetTradespersonAccountTradespersonIDOKBodyAddress": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "PostTradespersonAccountParamsBodyAddress": {
      "type": "object",
      "required": [
        "addressLineOne",
        "zipCode",
        "city",
        "state"
      ],
      "properties": {
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    }
  }
}`))
}
