// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"redbudway-api/models"
)

// PutTradespersonTradespersonIDBillingQuoteQuoteIDHandlerFunc turns a function with the right signature into a put tradesperson tradesperson ID billing quote quote ID handler
type PutTradespersonTradespersonIDBillingQuoteQuoteIDHandlerFunc func(PutTradespersonTradespersonIDBillingQuoteQuoteIDParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PutTradespersonTradespersonIDBillingQuoteQuoteIDHandlerFunc) Handle(params PutTradespersonTradespersonIDBillingQuoteQuoteIDParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PutTradespersonTradespersonIDBillingQuoteQuoteIDHandler interface for that can handle valid put tradesperson tradesperson ID billing quote quote ID params
type PutTradespersonTradespersonIDBillingQuoteQuoteIDHandler interface {
	Handle(PutTradespersonTradespersonIDBillingQuoteQuoteIDParams, interface{}) middleware.Responder
}

// NewPutTradespersonTradespersonIDBillingQuoteQuoteID creates a new http.Handler for the put tradesperson tradesperson ID billing quote quote ID operation
func NewPutTradespersonTradespersonIDBillingQuoteQuoteID(ctx *middleware.Context, handler PutTradespersonTradespersonIDBillingQuoteQuoteIDHandler) *PutTradespersonTradespersonIDBillingQuoteQuoteID {
	return &PutTradespersonTradespersonIDBillingQuoteQuoteID{Context: ctx, Handler: handler}
}

/* PutTradespersonTradespersonIDBillingQuoteQuoteID swagger:route PUT /tradesperson/{tradespersonId}/billing/quote/{quoteId} putTradespersonTradespersonIdBillingQuoteQuoteId

PutTradespersonTradespersonIDBillingQuoteQuoteID put tradesperson tradesperson ID billing quote quote ID API

*/
type PutTradespersonTradespersonIDBillingQuoteQuoteID struct {
	Context *middleware.Context
	Handler PutTradespersonTradespersonIDBillingQuoteQuoteIDHandler
}

func (o *PutTradespersonTradespersonIDBillingQuoteQuoteID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutTradespersonTradespersonIDBillingQuoteQuoteIDParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PutTradespersonTradespersonIDBillingQuoteQuoteIDBody put tradesperson tradesperson ID billing quote quote ID body
//
// swagger:model PutTradespersonTradespersonIDBillingQuoteQuoteIDBody
type PutTradespersonTradespersonIDBillingQuoteQuoteIDBody struct {

	// description
	Description string `json:"description,omitempty"`

	// products
	Products []*models.Product `json:"products"`
}

// Validate validates this put tradesperson tradesperson ID billing quote quote ID body
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) validateProducts(formats strfmt.Registry) error {
	if swag.IsZero(o.Products) { // not required
		return nil
	}

	for i := 0; i < len(o.Products); i++ {
		if swag.IsZero(o.Products[i]) { // not required
			continue
		}

		if o.Products[i] != nil {
			if err := o.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("quote" + "." + "products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("quote" + "." + "products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this put tradesperson tradesperson ID billing quote quote ID body based on the context it is used
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateProducts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) contextValidateProducts(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Products); i++ {

		if o.Products[i] != nil {
			if err := o.Products[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("quote" + "." + "products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("quote" + "." + "products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDBody) UnmarshalBinary(b []byte) error {
	var res PutTradespersonTradespersonIDBillingQuoteQuoteIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody put tradesperson tradesperson ID billing quote quote ID o k body
//
// swagger:model PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody
type PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody struct {

	// updated
	Updated bool `json:"updated"`
}

// Validate validates this put tradesperson tradesperson ID billing quote quote ID o k body
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put tradesperson tradesperson ID billing quote quote ID o k body based on context it is used
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutTradespersonTradespersonIDBillingQuoteQuoteIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
