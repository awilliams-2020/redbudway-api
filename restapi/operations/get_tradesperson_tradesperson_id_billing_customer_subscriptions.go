// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandlerFunc turns a function with the right signature into a get tradesperson tradesperson ID billing customer subscriptions handler
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandlerFunc func(GetTradespersonTradespersonIDBillingCustomerSubscriptionsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandlerFunc) Handle(params GetTradespersonTradespersonIDBillingCustomerSubscriptionsParams) middleware.Responder {
	return fn(params)
}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandler interface for that can handle valid get tradesperson tradesperson ID billing customer subscriptions params
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandler interface {
	Handle(GetTradespersonTradespersonIDBillingCustomerSubscriptionsParams) middleware.Responder
}

// NewGetTradespersonTradespersonIDBillingCustomerSubscriptions creates a new http.Handler for the get tradesperson tradesperson ID billing customer subscriptions operation
func NewGetTradespersonTradespersonIDBillingCustomerSubscriptions(ctx *middleware.Context, handler GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandler) *GetTradespersonTradespersonIDBillingCustomerSubscriptions {
	return &GetTradespersonTradespersonIDBillingCustomerSubscriptions{Context: ctx, Handler: handler}
}

/* GetTradespersonTradespersonIDBillingCustomerSubscriptions swagger:route GET /tradesperson/{tradespersonId}/billing/customer/subscriptions getTradespersonTradespersonIdBillingCustomerSubscriptions

GetTradespersonTradespersonIDBillingCustomerSubscriptions get tradesperson tradesperson ID billing customer subscriptions API

*/
type GetTradespersonTradespersonIDBillingCustomerSubscriptions struct {
	Context *middleware.Context
	Handler GetTradespersonTradespersonIDBillingCustomerSubscriptionsHandler
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptions) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTradespersonTradespersonIDBillingCustomerSubscriptionsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody get tradesperson tradesperson ID billing customer subscriptions o k body
//
// swagger:model GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody struct {

	// address
	Address *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress `json:"address,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// sbuscriptions
	Sbuscriptions []*GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0 `json:"sbuscriptions"`
}

// Validate validates this get tradesperson tradesperson ID billing customer subscriptions o k body
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSbuscriptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) validateAddress(formats strfmt.Registry) error {
	if swag.IsZero(o.Address) { // not required
		return nil
	}

	if o.Address != nil {
		if err := o.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "address")
			}
			return err
		}
	}

	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) validateSbuscriptions(formats strfmt.Registry) error {
	if swag.IsZero(o.Sbuscriptions) { // not required
		return nil
	}

	for i := 0; i < len(o.Sbuscriptions); i++ {
		if swag.IsZero(o.Sbuscriptions[i]) { // not required
			continue
		}

		if o.Sbuscriptions[i] != nil {
			if err := o.Sbuscriptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "sbuscriptions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "sbuscriptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get tradesperson tradesperson ID billing customer subscriptions o k body based on the context it is used
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSbuscriptions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) contextValidateAddress(ctx context.Context, formats strfmt.Registry) error {

	if o.Address != nil {
		if err := o.Address.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "address")
			}
			return err
		}
	}

	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) contextValidateSbuscriptions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Sbuscriptions); i++ {

		if o.Sbuscriptions[i] != nil {
			if err := o.Sbuscriptions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "sbuscriptions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getTradespersonTradespersonIdBillingCustomerSubscriptionsOK" + "." + "sbuscriptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress get tradesperson tradesperson ID billing customer subscriptions o k body address
//
// swagger:model GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress struct {

	// city
	City string `json:"city,omitempty"`

	// line1
	Line1 string `json:"line1,omitempty"`

	// line2
	Line2 string `json:"line2,omitempty"`

	// postal code
	PostalCode string `json:"postal_code,omitempty"`

	// state
	State string `json:"state,omitempty"`
}

// Validate validates this get tradesperson tradesperson ID billing customer subscriptions o k body address
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get tradesperson tradesperson ID billing customer subscriptions o k body address based on context it is used
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress) UnmarshalBinary(b []byte) error {
	var res GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodyAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0 get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0
//
// swagger:model GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0 struct {

	// details
	Details []*GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0 `json:"details"`

	// interval
	Interval string `json:"interval,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 based on the context it is used
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0) UnmarshalBinary(b []byte) error {
	var res GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0 get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0
//
// swagger:model GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0 struct {

	// invoice Id
	InvoiceID string `json:"invoiceId,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`

	// time slots
	TimeSlots []*GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0 `json:"timeSlots"`
}

// Validate validates this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTimeSlots(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) validateTimeSlots(formats strfmt.Registry) error {
	if swag.IsZero(o.TimeSlots) { // not required
		return nil
	}

	for i := 0; i < len(o.TimeSlots); i++ {
		if swag.IsZero(o.TimeSlots[i]) { // not required
			continue
		}

		if o.TimeSlots[i] != nil {
			if err := o.TimeSlots[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("timeSlots" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("timeSlots" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0 based on the context it is used
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTimeSlots(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) contextValidateTimeSlots(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.TimeSlots); i++ {

		if o.TimeSlots[i] != nil {
			if err := o.TimeSlots[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("timeSlots" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("timeSlots" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0 get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0 time slots items0
//
// swagger:model GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0
type GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0 struct {

	// end time
	EndTime string `json:"endTime,omitempty"`

	// segment size
	SegmentSize int64 `json:"segmentSize,omitempty"`

	// start time
	// Format: date
	StartTime strfmt.Date `json:"startTime,omitempty"`
}

// Validate validates this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0 time slots items0
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(o.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("startTime", "body", "date", o.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get tradesperson tradesperson ID billing customer subscriptions o k body sbuscriptions items0 details items0 time slots items0 based on context it is used
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0) UnmarshalBinary(b []byte) error {
	var res GetTradespersonTradespersonIDBillingCustomerSubscriptionsOKBodySbuscriptionsItems0DetailsItems0TimeSlotsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
