// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTradespersonAccountTradespersonIDSettingsHandlerFunc turns a function with the right signature into a get tradesperson account tradesperson ID settings handler
type GetTradespersonAccountTradespersonIDSettingsHandlerFunc func(GetTradespersonAccountTradespersonIDSettingsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTradespersonAccountTradespersonIDSettingsHandlerFunc) Handle(params GetTradespersonAccountTradespersonIDSettingsParams) middleware.Responder {
	return fn(params)
}

// GetTradespersonAccountTradespersonIDSettingsHandler interface for that can handle valid get tradesperson account tradesperson ID settings params
type GetTradespersonAccountTradespersonIDSettingsHandler interface {
	Handle(GetTradespersonAccountTradespersonIDSettingsParams) middleware.Responder
}

// NewGetTradespersonAccountTradespersonIDSettings creates a new http.Handler for the get tradesperson account tradesperson ID settings operation
func NewGetTradespersonAccountTradespersonIDSettings(ctx *middleware.Context, handler GetTradespersonAccountTradespersonIDSettingsHandler) *GetTradespersonAccountTradespersonIDSettings {
	return &GetTradespersonAccountTradespersonIDSettings{Context: ctx, Handler: handler}
}

/* GetTradespersonAccountTradespersonIDSettings swagger:route GET /tradesperson/account/{tradespersonId}/settings getTradespersonAccountTradespersonIdSettings

GetTradespersonAccountTradespersonIDSettings get tradesperson account tradesperson ID settings API

*/
type GetTradespersonAccountTradespersonIDSettings struct {
	Context *middleware.Context
	Handler GetTradespersonAccountTradespersonIDSettingsHandler
}

func (o *GetTradespersonAccountTradespersonIDSettings) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTradespersonAccountTradespersonIDSettingsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetTradespersonAccountTradespersonIDSettingsOKBody get tradesperson account tradesperson ID settings o k body
//
// swagger:model GetTradespersonAccountTradespersonIDSettingsOKBody
type GetTradespersonAccountTradespersonIDSettingsOKBody struct {

	// address
	Address bool `json:"address,omitempty"`

	// email
	Email bool `json:"email,omitempty"`

	// number
	Number bool `json:"number,omitempty"`
}

// Validate validates this get tradesperson account tradesperson ID settings o k body
func (o *GetTradespersonAccountTradespersonIDSettingsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get tradesperson account tradesperson ID settings o k body based on context it is used
func (o *GetTradespersonAccountTradespersonIDSettingsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDSettingsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDSettingsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTradespersonAccountTradespersonIDSettingsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
