// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"redbudway-api/models"
)

// PostTradespersonTradespersonIDCouponCouponIDPromoHandlerFunc turns a function with the right signature into a post tradesperson tradesperson ID coupon coupon ID promo handler
type PostTradespersonTradespersonIDCouponCouponIDPromoHandlerFunc func(PostTradespersonTradespersonIDCouponCouponIDPromoParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTradespersonTradespersonIDCouponCouponIDPromoHandlerFunc) Handle(params PostTradespersonTradespersonIDCouponCouponIDPromoParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PostTradespersonTradespersonIDCouponCouponIDPromoHandler interface for that can handle valid post tradesperson tradesperson ID coupon coupon ID promo params
type PostTradespersonTradespersonIDCouponCouponIDPromoHandler interface {
	Handle(PostTradespersonTradespersonIDCouponCouponIDPromoParams, interface{}) middleware.Responder
}

// NewPostTradespersonTradespersonIDCouponCouponIDPromo creates a new http.Handler for the post tradesperson tradesperson ID coupon coupon ID promo operation
func NewPostTradespersonTradespersonIDCouponCouponIDPromo(ctx *middleware.Context, handler PostTradespersonTradespersonIDCouponCouponIDPromoHandler) *PostTradespersonTradespersonIDCouponCouponIDPromo {
	return &PostTradespersonTradespersonIDCouponCouponIDPromo{Context: ctx, Handler: handler}
}

/* PostTradespersonTradespersonIDCouponCouponIDPromo swagger:route POST /tradesperson/{tradespersonId}/coupon/{couponId}/promo postTradespersonTradespersonIdCouponCouponIdPromo

PostTradespersonTradespersonIDCouponCouponIDPromo post tradesperson tradesperson ID coupon coupon ID promo API

*/
type PostTradespersonTradespersonIDCouponCouponIDPromo struct {
	Context *middleware.Context
	Handler PostTradespersonTradespersonIDCouponCouponIDPromoHandler
}

func (o *PostTradespersonTradespersonIDCouponCouponIDPromo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTradespersonTradespersonIDCouponCouponIDPromoParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTradespersonTradespersonIDCouponCouponIDPromoOKBody post tradesperson tradesperson ID coupon coupon ID promo o k body
//
// swagger:model PostTradespersonTradespersonIDCouponCouponIDPromoOKBody
type PostTradespersonTradespersonIDCouponCouponIDPromoOKBody struct {

	// created
	Created bool `json:"created"`

	// promo
	Promo *models.Promo `json:"promo,omitempty"`
}

// Validate validates this post tradesperson tradesperson ID coupon coupon ID promo o k body
func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePromo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) validatePromo(formats strfmt.Registry) error {
	if swag.IsZero(o.Promo) { // not required
		return nil
	}

	if o.Promo != nil {
		if err := o.Promo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postTradespersonTradespersonIdCouponCouponIdPromoOK" + "." + "promo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postTradespersonTradespersonIdCouponCouponIdPromoOK" + "." + "promo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post tradesperson tradesperson ID coupon coupon ID promo o k body based on the context it is used
func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePromo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) contextValidatePromo(ctx context.Context, formats strfmt.Registry) error {

	if o.Promo != nil {
		if err := o.Promo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postTradespersonTradespersonIdCouponCouponIdPromoOK" + "." + "promo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postTradespersonTradespersonIdCouponCouponIdPromoOK" + "." + "promo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDCouponCouponIDPromoOKBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDCouponCouponIDPromoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
