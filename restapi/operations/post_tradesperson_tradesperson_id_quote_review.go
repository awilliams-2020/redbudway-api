// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostTradespersonTradespersonIDQuoteReviewHandlerFunc turns a function with the right signature into a post tradesperson tradesperson ID quote review handler
type PostTradespersonTradespersonIDQuoteReviewHandlerFunc func(PostTradespersonTradespersonIDQuoteReviewParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTradespersonTradespersonIDQuoteReviewHandlerFunc) Handle(params PostTradespersonTradespersonIDQuoteReviewParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PostTradespersonTradespersonIDQuoteReviewHandler interface for that can handle valid post tradesperson tradesperson ID quote review params
type PostTradespersonTradespersonIDQuoteReviewHandler interface {
	Handle(PostTradespersonTradespersonIDQuoteReviewParams, interface{}) middleware.Responder
}

// NewPostTradespersonTradespersonIDQuoteReview creates a new http.Handler for the post tradesperson tradesperson ID quote review operation
func NewPostTradespersonTradespersonIDQuoteReview(ctx *middleware.Context, handler PostTradespersonTradespersonIDQuoteReviewHandler) *PostTradespersonTradespersonIDQuoteReview {
	return &PostTradespersonTradespersonIDQuoteReview{Context: ctx, Handler: handler}
}

/* PostTradespersonTradespersonIDQuoteReview swagger:route POST /tradesperson/{tradespersonId}/quote/review postTradespersonTradespersonIdQuoteReview

PostTradespersonTradespersonIDQuoteReview post tradesperson tradesperson ID quote review API

*/
type PostTradespersonTradespersonIDQuoteReview struct {
	Context *middleware.Context
	Handler PostTradespersonTradespersonIDQuoteReviewHandler
}

func (o *PostTradespersonTradespersonIDQuoteReview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTradespersonTradespersonIDQuoteReviewParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTradespersonTradespersonIDQuoteReviewBody post tradesperson tradesperson ID quote review body
//
// swagger:model PostTradespersonTradespersonIDQuoteReviewBody
type PostTradespersonTradespersonIDQuoteReviewBody struct {

	// quote Id
	// Required: true
	QuoteID *int64 `json:"quoteId"`

	// response
	// Required: true
	Response *string `json:"response"`
}

// Validate validates this post tradesperson tradesperson ID quote review body
func (o *PostTradespersonTradespersonIDQuoteReviewBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuoteID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTradespersonTradespersonIDQuoteReviewBody) validateQuoteID(formats strfmt.Registry) error {

	if err := validate.Required("review"+"."+"quoteId", "body", o.QuoteID); err != nil {
		return err
	}

	return nil
}

func (o *PostTradespersonTradespersonIDQuoteReviewBody) validateResponse(formats strfmt.Registry) error {

	if err := validate.Required("review"+"."+"response", "body", o.Response); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID quote review body based on context it is used
func (o *PostTradespersonTradespersonIDQuoteReviewBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDQuoteReviewBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDQuoteReviewBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDQuoteReviewBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostTradespersonTradespersonIDQuoteReviewOKBody post tradesperson tradesperson ID quote review o k body
//
// swagger:model PostTradespersonTradespersonIDQuoteReviewOKBody
type PostTradespersonTradespersonIDQuoteReviewOKBody struct {

	// responded
	Responded bool `json:"responded"`
}

// Validate validates this post tradesperson tradesperson ID quote review o k body
func (o *PostTradespersonTradespersonIDQuoteReviewOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID quote review o k body based on context it is used
func (o *PostTradespersonTradespersonIDQuoteReviewOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDQuoteReviewOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDQuoteReviewOKBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDQuoteReviewOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
