// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostTradespersonTradespersonIDGoogleTokenHandlerFunc turns a function with the right signature into a post tradesperson tradesperson ID google token handler
type PostTradespersonTradespersonIDGoogleTokenHandlerFunc func(PostTradespersonTradespersonIDGoogleTokenParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTradespersonTradespersonIDGoogleTokenHandlerFunc) Handle(params PostTradespersonTradespersonIDGoogleTokenParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PostTradespersonTradespersonIDGoogleTokenHandler interface for that can handle valid post tradesperson tradesperson ID google token params
type PostTradespersonTradespersonIDGoogleTokenHandler interface {
	Handle(PostTradespersonTradespersonIDGoogleTokenParams, interface{}) middleware.Responder
}

// NewPostTradespersonTradespersonIDGoogleToken creates a new http.Handler for the post tradesperson tradesperson ID google token operation
func NewPostTradespersonTradespersonIDGoogleToken(ctx *middleware.Context, handler PostTradespersonTradespersonIDGoogleTokenHandler) *PostTradespersonTradespersonIDGoogleToken {
	return &PostTradespersonTradespersonIDGoogleToken{Context: ctx, Handler: handler}
}

/* PostTradespersonTradespersonIDGoogleToken swagger:route POST /tradesperson/{tradespersonId}/google-token postTradespersonTradespersonIdGoogleToken

PostTradespersonTradespersonIDGoogleToken post tradesperson tradesperson ID google token API

*/
type PostTradespersonTradespersonIDGoogleToken struct {
	Context *middleware.Context
	Handler PostTradespersonTradespersonIDGoogleTokenHandler
}

func (o *PostTradespersonTradespersonIDGoogleToken) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTradespersonTradespersonIDGoogleTokenParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTradespersonTradespersonIDGoogleTokenBody post tradesperson tradesperson ID google token body
//
// swagger:model PostTradespersonTradespersonIDGoogleTokenBody
type PostTradespersonTradespersonIDGoogleTokenBody struct {

	// code
	Code string `json:"code,omitempty"`
}

// Validate validates this post tradesperson tradesperson ID google token body
func (o *PostTradespersonTradespersonIDGoogleTokenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID google token body based on context it is used
func (o *PostTradespersonTradespersonIDGoogleTokenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDGoogleTokenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDGoogleTokenBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDGoogleTokenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostTradespersonTradespersonIDGoogleTokenOKBody post tradesperson tradesperson ID google token o k body
//
// swagger:model PostTradespersonTradespersonIDGoogleTokenOKBody
type PostTradespersonTradespersonIDGoogleTokenOKBody struct {

	// access token
	AccessToken string `json:"accessToken,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// expires in
	ExpiresIn float64 `json:"expiresIn,omitempty"`

	// picture
	Picture string `json:"picture,omitempty"`
}

// Validate validates this post tradesperson tradesperson ID google token o k body
func (o *PostTradespersonTradespersonIDGoogleTokenOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID google token o k body based on context it is used
func (o *PostTradespersonTradespersonIDGoogleTokenOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDGoogleTokenOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDGoogleTokenOKBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDGoogleTokenOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
