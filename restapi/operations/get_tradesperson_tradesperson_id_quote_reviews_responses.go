// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetTradespersonTradespersonIDQuoteReviewsOKCode is the HTTP code returned for type GetTradespersonTradespersonIDQuoteReviewsOK
const GetTradespersonTradespersonIDQuoteReviewsOKCode int = 200

/*GetTradespersonTradespersonIDQuoteReviewsOK Quote reviews

swagger:response getTradespersonTradespersonIdQuoteReviewsOK
*/
type GetTradespersonTradespersonIDQuoteReviewsOK struct {

	/*
	  In: Body
	*/
	Payload []*GetTradespersonTradespersonIDQuoteReviewsOKBodyItems0 `json:"body,omitempty"`
}

// NewGetTradespersonTradespersonIDQuoteReviewsOK creates GetTradespersonTradespersonIDQuoteReviewsOK with default headers values
func NewGetTradespersonTradespersonIDQuoteReviewsOK() *GetTradespersonTradespersonIDQuoteReviewsOK {

	return &GetTradespersonTradespersonIDQuoteReviewsOK{}
}

// WithPayload adds the payload to the get tradesperson tradesperson Id quote reviews o k response
func (o *GetTradespersonTradespersonIDQuoteReviewsOK) WithPayload(payload []*GetTradespersonTradespersonIDQuoteReviewsOKBodyItems0) *GetTradespersonTradespersonIDQuoteReviewsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tradesperson tradesperson Id quote reviews o k response
func (o *GetTradespersonTradespersonIDQuoteReviewsOK) SetPayload(payload []*GetTradespersonTradespersonIDQuoteReviewsOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTradespersonTradespersonIDQuoteReviewsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*GetTradespersonTradespersonIDQuoteReviewsOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
