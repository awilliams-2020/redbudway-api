// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOKCode is the HTTP code returned for type GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK
const GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOKCode int = 200

/*GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK Customer subscriptions

swagger:response getTradespersonTradespersonIdBillingCustomerStripeIdSubscriptionsOK
*/
type GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK struct {

	/*
	  In: Body
	*/
	Payload *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOKBody `json:"body,omitempty"`
}

// NewGetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK creates GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK with default headers values
func NewGetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK() *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK {

	return &GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK{}
}

// WithPayload adds the payload to the get tradesperson tradesperson Id billing customer stripe Id subscriptions o k response
func (o *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK) WithPayload(payload *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOKBody) *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tradesperson tradesperson Id billing customer stripe Id subscriptions o k response
func (o *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK) SetPayload(payload *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTradespersonTradespersonIDBillingCustomerStripeIDSubscriptionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
