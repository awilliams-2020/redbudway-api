// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PutTradespersonTradespersonIDCouponCouponIDHandlerFunc turns a function with the right signature into a put tradesperson tradesperson ID coupon coupon ID handler
type PutTradespersonTradespersonIDCouponCouponIDHandlerFunc func(PutTradespersonTradespersonIDCouponCouponIDParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PutTradespersonTradespersonIDCouponCouponIDHandlerFunc) Handle(params PutTradespersonTradespersonIDCouponCouponIDParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PutTradespersonTradespersonIDCouponCouponIDHandler interface for that can handle valid put tradesperson tradesperson ID coupon coupon ID params
type PutTradespersonTradespersonIDCouponCouponIDHandler interface {
	Handle(PutTradespersonTradespersonIDCouponCouponIDParams, interface{}) middleware.Responder
}

// NewPutTradespersonTradespersonIDCouponCouponID creates a new http.Handler for the put tradesperson tradesperson ID coupon coupon ID operation
func NewPutTradespersonTradespersonIDCouponCouponID(ctx *middleware.Context, handler PutTradespersonTradespersonIDCouponCouponIDHandler) *PutTradespersonTradespersonIDCouponCouponID {
	return &PutTradespersonTradespersonIDCouponCouponID{Context: ctx, Handler: handler}
}

/* PutTradespersonTradespersonIDCouponCouponID swagger:route PUT /tradesperson/{tradespersonId}/coupon/{couponId} putTradespersonTradespersonIdCouponCouponId

PutTradespersonTradespersonIDCouponCouponID put tradesperson tradesperson ID coupon coupon ID API

*/
type PutTradespersonTradespersonIDCouponCouponID struct {
	Context *middleware.Context
	Handler PutTradespersonTradespersonIDCouponCouponIDHandler
}

func (o *PutTradespersonTradespersonIDCouponCouponID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutTradespersonTradespersonIDCouponCouponIDParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PutTradespersonTradespersonIDCouponCouponIDBody put tradesperson tradesperson ID coupon coupon ID body
//
// swagger:model PutTradespersonTradespersonIDCouponCouponIDBody
type PutTradespersonTradespersonIDCouponCouponIDBody struct {

	// name
	// Max Length: 40
	Name string `json:"name,omitempty"`

	// services
	Services []string `json:"services"`
}

// Validate validates this put tradesperson tradesperson ID coupon coupon ID body
func (o *PutTradespersonTradespersonIDCouponCouponIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutTradespersonTradespersonIDCouponCouponIDBody) validateName(formats strfmt.Registry) error {
	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("coupon"+"."+"name", "body", o.Name, 40); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this put tradesperson tradesperson ID coupon coupon ID body based on context it is used
func (o *PutTradespersonTradespersonIDCouponCouponIDBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDCouponCouponIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDCouponCouponIDBody) UnmarshalBinary(b []byte) error {
	var res PutTradespersonTradespersonIDCouponCouponIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PutTradespersonTradespersonIDCouponCouponIDOKBody put tradesperson tradesperson ID coupon coupon ID o k body
//
// swagger:model PutTradespersonTradespersonIDCouponCouponIDOKBody
type PutTradespersonTradespersonIDCouponCouponIDOKBody struct {

	// updated
	Updated bool `json:"updated"`
}

// Validate validates this put tradesperson tradesperson ID coupon coupon ID o k body
func (o *PutTradespersonTradespersonIDCouponCouponIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put tradesperson tradesperson ID coupon coupon ID o k body based on context it is used
func (o *PutTradespersonTradespersonIDCouponCouponIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDCouponCouponIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTradespersonTradespersonIDCouponCouponIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutTradespersonTradespersonIDCouponCouponIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
