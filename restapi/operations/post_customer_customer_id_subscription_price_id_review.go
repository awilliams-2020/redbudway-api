// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostCustomerCustomerIDSubscriptionPriceIDReviewHandlerFunc turns a function with the right signature into a post customer customer ID subscription price ID review handler
type PostCustomerCustomerIDSubscriptionPriceIDReviewHandlerFunc func(PostCustomerCustomerIDSubscriptionPriceIDReviewParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PostCustomerCustomerIDSubscriptionPriceIDReviewHandlerFunc) Handle(params PostCustomerCustomerIDSubscriptionPriceIDReviewParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PostCustomerCustomerIDSubscriptionPriceIDReviewHandler interface for that can handle valid post customer customer ID subscription price ID review params
type PostCustomerCustomerIDSubscriptionPriceIDReviewHandler interface {
	Handle(PostCustomerCustomerIDSubscriptionPriceIDReviewParams, interface{}) middleware.Responder
}

// NewPostCustomerCustomerIDSubscriptionPriceIDReview creates a new http.Handler for the post customer customer ID subscription price ID review operation
func NewPostCustomerCustomerIDSubscriptionPriceIDReview(ctx *middleware.Context, handler PostCustomerCustomerIDSubscriptionPriceIDReviewHandler) *PostCustomerCustomerIDSubscriptionPriceIDReview {
	return &PostCustomerCustomerIDSubscriptionPriceIDReview{Context: ctx, Handler: handler}
}

/* PostCustomerCustomerIDSubscriptionPriceIDReview swagger:route POST /customer/{customerId}/subscription/{priceId}/review postCustomerCustomerIdSubscriptionPriceIdReview

PostCustomerCustomerIDSubscriptionPriceIDReview post customer customer ID subscription price ID review API

*/
type PostCustomerCustomerIDSubscriptionPriceIDReview struct {
	Context *middleware.Context
	Handler PostCustomerCustomerIDSubscriptionPriceIDReviewHandler
}

func (o *PostCustomerCustomerIDSubscriptionPriceIDReview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostCustomerCustomerIDSubscriptionPriceIDReviewParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostCustomerCustomerIDSubscriptionPriceIDReviewBody post customer customer ID subscription price ID review body
//
// swagger:model PostCustomerCustomerIDSubscriptionPriceIDReviewBody
type PostCustomerCustomerIDSubscriptionPriceIDReviewBody struct {

	// message
	Message string `json:"message,omitempty"`

	// rating
	Rating int64 `json:"rating,omitempty"`
}

// Validate validates this post customer customer ID subscription price ID review body
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post customer customer ID subscription price ID review body based on context it is used
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerCustomerIDSubscriptionPriceIDReviewBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody post customer customer ID subscription price ID review o k body
//
// swagger:model PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody
type PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody struct {

	// rated
	Rated bool `json:"rated"`
}

// Validate validates this post customer customer ID subscription price ID review o k body
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post customer customer ID subscription price ID review o k body based on context it is used
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerCustomerIDSubscriptionPriceIDReviewOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
