// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostTradespersonTradespersonIDFixedPriceReviewHandlerFunc turns a function with the right signature into a post tradesperson tradesperson ID fixed price review handler
type PostTradespersonTradespersonIDFixedPriceReviewHandlerFunc func(PostTradespersonTradespersonIDFixedPriceReviewParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTradespersonTradespersonIDFixedPriceReviewHandlerFunc) Handle(params PostTradespersonTradespersonIDFixedPriceReviewParams) middleware.Responder {
	return fn(params)
}

// PostTradespersonTradespersonIDFixedPriceReviewHandler interface for that can handle valid post tradesperson tradesperson ID fixed price review params
type PostTradespersonTradespersonIDFixedPriceReviewHandler interface {
	Handle(PostTradespersonTradespersonIDFixedPriceReviewParams) middleware.Responder
}

// NewPostTradespersonTradespersonIDFixedPriceReview creates a new http.Handler for the post tradesperson tradesperson ID fixed price review operation
func NewPostTradespersonTradespersonIDFixedPriceReview(ctx *middleware.Context, handler PostTradespersonTradespersonIDFixedPriceReviewHandler) *PostTradespersonTradespersonIDFixedPriceReview {
	return &PostTradespersonTradespersonIDFixedPriceReview{Context: ctx, Handler: handler}
}

/* PostTradespersonTradespersonIDFixedPriceReview swagger:route POST /tradesperson/{tradespersonId}/fixed-price/review postTradespersonTradespersonIdFixedPriceReview

PostTradespersonTradespersonIDFixedPriceReview post tradesperson tradesperson ID fixed price review API

*/
type PostTradespersonTradespersonIDFixedPriceReview struct {
	Context *middleware.Context
	Handler PostTradespersonTradespersonIDFixedPriceReviewHandler
}

func (o *PostTradespersonTradespersonIDFixedPriceReview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTradespersonTradespersonIDFixedPriceReviewParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTradespersonTradespersonIDFixedPriceReviewBody post tradesperson tradesperson ID fixed price review body
//
// swagger:model PostTradespersonTradespersonIDFixedPriceReviewBody
type PostTradespersonTradespersonIDFixedPriceReviewBody struct {

	// response
	// Required: true
	Response *string `json:"response"`

	// review Id
	// Required: true
	ReviewID *string `json:"reviewId"`
}

// Validate validates this post tradesperson tradesperson ID fixed price review body
func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReviewID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) validateResponse(formats strfmt.Registry) error {

	if err := validate.Required("reviewResponse"+"."+"response", "body", o.Response); err != nil {
		return err
	}

	return nil
}

func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) validateReviewID(formats strfmt.Registry) error {

	if err := validate.Required("reviewResponse"+"."+"reviewId", "body", o.ReviewID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID fixed price review body based on context it is used
func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDFixedPriceReviewBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDFixedPriceReviewBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostTradespersonTradespersonIDFixedPriceReviewOKBody post tradesperson tradesperson ID fixed price review o k body
//
// swagger:model PostTradespersonTradespersonIDFixedPriceReviewOKBody
type PostTradespersonTradespersonIDFixedPriceReviewOKBody struct {

	// responded
	Responded bool `json:"responded,omitempty"`
}

// Validate validates this post tradesperson tradesperson ID fixed price review o k body
func (o *PostTradespersonTradespersonIDFixedPriceReviewOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID fixed price review o k body based on context it is used
func (o *PostTradespersonTradespersonIDFixedPriceReviewOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDFixedPriceReviewOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDFixedPriceReviewOKBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDFixedPriceReviewOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
