// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandlerFunc turns a function with the right signature into a post tradesperson tradesperson ID billing customer subscription invoice refund handler
type PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandlerFunc func(PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandlerFunc) Handle(params PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundParams) middleware.Responder {
	return fn(params)
}

// PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandler interface for that can handle valid post tradesperson tradesperson ID billing customer subscription invoice refund params
type PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandler interface {
	Handle(PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundParams) middleware.Responder
}

// NewPostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund creates a new http.Handler for the post tradesperson tradesperson ID billing customer subscription invoice refund operation
func NewPostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund(ctx *middleware.Context, handler PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandler) *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund {
	return &PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund{Context: ctx, Handler: handler}
}

/* PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund swagger:route POST /tradesperson/{tradespersonId}/billing/customer/subscription/invoice/refund postTradespersonTradespersonIdBillingCustomerSubscriptionInvoiceRefund

PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund post tradesperson tradesperson ID billing customer subscription invoice refund API

*/
type PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund struct {
	Context *middleware.Context
	Handler PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundHandler
}

func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefund) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody post tradesperson tradesperson ID billing customer subscription invoice refund body
//
// swagger:model PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody
type PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody struct {

	// subscription Id
	// Required: true
	SubscriptionID *string `json:"subscriptionId"`
}

// Validate validates this post tradesperson tradesperson ID billing customer subscription invoice refund body
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody) validateSubscriptionID(formats strfmt.Registry) error {

	if err := validate.Required("subscription"+"."+"subscriptionId", "body", o.SubscriptionID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID billing customer subscription invoice refund body based on context it is used
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody post tradesperson tradesperson ID billing customer subscription invoice refund o k body
//
// swagger:model PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody
type PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody struct {

	// refunded
	Refunded bool `json:"refunded"`
}

// Validate validates this post tradesperson tradesperson ID billing customer subscription invoice refund o k body
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post tradesperson tradesperson ID billing customer subscription invoice refund o k body based on context it is used
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody) UnmarshalBinary(b []byte) error {
	var res PostTradespersonTradespersonIDBillingCustomerSubscriptionInvoiceRefundOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
