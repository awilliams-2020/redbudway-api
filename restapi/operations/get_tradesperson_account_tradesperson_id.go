// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTradespersonAccountTradespersonIDHandlerFunc turns a function with the right signature into a get tradesperson account tradesperson ID handler
type GetTradespersonAccountTradespersonIDHandlerFunc func(GetTradespersonAccountTradespersonIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTradespersonAccountTradespersonIDHandlerFunc) Handle(params GetTradespersonAccountTradespersonIDParams) middleware.Responder {
	return fn(params)
}

// GetTradespersonAccountTradespersonIDHandler interface for that can handle valid get tradesperson account tradesperson ID params
type GetTradespersonAccountTradespersonIDHandler interface {
	Handle(GetTradespersonAccountTradespersonIDParams) middleware.Responder
}

// NewGetTradespersonAccountTradespersonID creates a new http.Handler for the get tradesperson account tradesperson ID operation
func NewGetTradespersonAccountTradespersonID(ctx *middleware.Context, handler GetTradespersonAccountTradespersonIDHandler) *GetTradespersonAccountTradespersonID {
	return &GetTradespersonAccountTradespersonID{Context: ctx, Handler: handler}
}

/* GetTradespersonAccountTradespersonID swagger:route GET /tradesperson/account/{tradespersonId} getTradespersonAccountTradespersonId

GetTradespersonAccountTradespersonID get tradesperson account tradesperson ID API

*/
type GetTradespersonAccountTradespersonID struct {
	Context *middleware.Context
	Handler GetTradespersonAccountTradespersonIDHandler
}

func (o *GetTradespersonAccountTradespersonID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTradespersonAccountTradespersonIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetTradespersonAccountTradespersonIDOKBody get tradesperson account tradesperson ID o k body
//
// swagger:model GetTradespersonAccountTradespersonIDOKBody
type GetTradespersonAccountTradespersonIDOKBody struct {

	// address
	Address *GetTradespersonAccountTradespersonIDOKBodyAddress `json:"address,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// image
	Image string `json:"image,omitempty"`

	// jobs
	Jobs int64 `json:"jobs,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// number
	Number string `json:"number,omitempty"`

	// rating
	Rating int64 `json:"rating,omitempty"`

	// reviews
	Reviews int64 `json:"reviews,omitempty"`
}

// Validate validates this get tradesperson account tradesperson ID o k body
func (o *GetTradespersonAccountTradespersonIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonAccountTradespersonIDOKBody) validateAddress(formats strfmt.Registry) error {
	if swag.IsZero(o.Address) { // not required
		return nil
	}

	if o.Address != nil {
		if err := o.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTradespersonAccountTradespersonIdOK" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTradespersonAccountTradespersonIdOK" + "." + "address")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get tradesperson account tradesperson ID o k body based on the context it is used
func (o *GetTradespersonAccountTradespersonIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTradespersonAccountTradespersonIDOKBody) contextValidateAddress(ctx context.Context, formats strfmt.Registry) error {

	if o.Address != nil {
		if err := o.Address.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTradespersonAccountTradespersonIdOK" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTradespersonAccountTradespersonIdOK" + "." + "address")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetTradespersonAccountTradespersonIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTradespersonAccountTradespersonIDOKBodyAddress get tradesperson account tradesperson ID o k body address
//
// swagger:model GetTradespersonAccountTradespersonIDOKBodyAddress
type GetTradespersonAccountTradespersonIDOKBodyAddress struct {

	// city
	City string `json:"city,omitempty"`

	// line1
	Line1 string `json:"line1,omitempty"`

	// line2
	Line2 string `json:"line2,omitempty"`

	// postal code
	PostalCode string `json:"postal_code,omitempty"`

	// state
	State string `json:"state,omitempty"`
}

// Validate validates this get tradesperson account tradesperson ID o k body address
func (o *GetTradespersonAccountTradespersonIDOKBodyAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get tradesperson account tradesperson ID o k body address based on context it is used
func (o *GetTradespersonAccountTradespersonIDOKBodyAddress) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDOKBodyAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTradespersonAccountTradespersonIDOKBodyAddress) UnmarshalBinary(b []byte) error {
	var res GetTradespersonAccountTradespersonIDOKBodyAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
